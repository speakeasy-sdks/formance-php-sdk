<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace formance\formance\Models\Shared;


class WorkflowInstanceHistoryStageOutput
{
	#[\JMS\Serializer\Annotation\SerializedName('CreateTransaction')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityCreateTransactionOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityCreateTransactionOutput $createTransaction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DebitWallet')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityDebitWalletOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityDebitWalletOutput $debitWallet = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GetAccount')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityGetAccountOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityGetAccountOutput $getAccount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GetPayment')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityGetPaymentOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityGetPaymentOutput $getPayment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GetWallet')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityGetWalletOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityGetWalletOutput $getWallet = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RevertTransaction')]
    #[\JMS\Serializer\Annotation\Type('formance\formance\Models\Shared\ActivityRevertTransactionOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityRevertTransactionOutput $revertTransaction = null;
    
	public function __construct()
	{
		$this->createTransaction = null;
		$this->debitWallet = null;
		$this->getAccount = null;
		$this->getPayment = null;
		$this->getWallet = null;
		$this->revertTransaction = null;
	}
}
